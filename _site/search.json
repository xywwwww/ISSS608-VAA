[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The purpose of this take home exercise is to to reveal the demographic and financial characteristics of the city of Engagement, using appropriate static and interactive statistical graphics methods. This exercise requires a user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#installing-the-data-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#installing-the-data-packages",
    "title": "Take-home_Ex01",
    "section": "2.1 Installing the data packages",
    "text": "2.1 Installing the data packages\n\npacman::p_load(ggplot2, ggiraph, plotly, \n               patchwork, DT, tidyverse,\n               ggrepel, ggthemes, hrbrthemes,\n               tidyverse,ggstatsplot,pals,readxl, \n               performance, parameters, see) \n\nggplot2: A data visualization package for creating graphics in R. It provides a flexible and powerful framework for creating elegant and complex graphs. Documentation: https://ggplot2.tidyverse.org/\nggiraph: An extension to ggplot2 that allows you to add interactivity to your ggplot2 graphics. It provides a set of functions that enable you to create interactive tooltips and clickable regions on your plots. Documentation: https://davidgohel.github.io/ggiraph/index.html\nplotly: A data visualization package that allows you to create interactive, web-based plots in R. It provides a wide range of chart types, including scatter plots, line charts, and heatmaps. Documentation: https://plotly.com/r/\npatchwork: A package for combining multiple ggplots into a single plot. It provides a flexible and powerful framework for arranging, annotating, and styling your plots. Documentation: https://patchwork.data-imaginist.com/\nDT: A package for creating interactive data tables in R. It provides a wide range of features, including sorting, filtering, and pagination. Documentation: https://rstudio.github.io/DT/\ntidyverse: A collection of packages for data manipulation and visualization in R. It provides a consistent set of tools for working with data, including data cleaning, transformation, and visualization. Documentation: https://www.tidyverse.org/\nggrepel: A package for avoiding overplotting of text labels in ggplot2. It provides a set of functions for positioning labels in a way that minimizes overlap and maximizes readability. Documentation: https://ggrepel.slowkow.com/\nggthemes: A package for creating visually appealing themes for ggplot2 graphics. It provides a set of pre-designed themes that can be used to customize the appearance of your plots. Documentation: https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/\nhrbrthemes: A package for creating visually appealing themes for ggplot2 graphics. It provides a set of pre-designed themes that are designed to be aesthetically pleasing and easy to read. Documentation: https://hrbrmstr.github.io/hrbrthemes/\nggstatsplot: A package for creating publication-ready plots with statistical analysis built-in. It provides a set of functions for creating common statistical plots, including scatterplots, boxplots, and histograms, with statistical tests and summary information included. Documentation: https://indrajeetpatil.github.io/ggstatsplot/\npals: A package for creating color palettes for data visualization. It provides a set of functions for generating color palettes based on various themes and color schemes. Documentation: https://cran.r-project.org/web/packages/pals/vignettes/pals_examples.html\nreadxl: A package for reading Excel files in R. It provides a set of functions for importing data from Excel spreadsheets into R data frames. Documentation: https://readxl.tidyverse.org/\nperformance: A package for evaluating the performance of predictive models in R. It provides a set of functions for creating various types of performance metrics and visualizations. Documentation: https://easystats.github.io/performance/\nparameters: A package for managing parameters and arguments in R. It provides a set of functions for defining, validating, and documenting parameters in R functions. Documentation: https://www.rdocumentation.org/packages/parameters/versions/0.21.0\nsee: A package for visualizing the output of R functions. It provides a set of functions for creating visual summaries of data frames, matrices, and other R objects. Documentation: https://cran.r-project.org/web/packages/see/index.html"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#dataset-introduction",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#dataset-introduction",
    "title": "Take-home_Ex01",
    "section": "2.2 Dataset introduction",
    "text": "2.2 Dataset introduction\nThe unzipped files have been saved into a new folder named data for better organization.\n\npart_info <- read_csv(\"data/Participants.csv\")\n\nParticipants.csv\nContains information about the residents of City of Engagement that have agreed to participate in this study.\n\nparticipantId (integer): unique ID assigned to each participant.\nhouseholdSize (integer): the number of people in the participant’s household\nhaveKids (boolean): whether there are children living in the participant’s household.\nage (integer): participant’s age in years at the start of the study.\neducationLevel (string factor): the participant’s education level, one of: {“Low”, “HighSchoolOrCollege”, “Bachelors”, “Graduate”}\ninterestGroup (char): a char representing the participant’s stated primary interest group, one of {“A”, “B”, “C”, “D”, “E”, “F”, “G”, “H”, “I”, “J”}. Note: specific topics of interest have been redacted to avoid bias.\njoviality (float): a value ranging from [0,1] indicating the participant’s overall happiness level at the start of the study.\n\n\nfinance <- read_csv(\"data/FinancialJournal.csv\")\n\nFinancialJournal.csv\nContains information about financial transactions.\n\nparticipantId (integer): unique ID corresponding to the participant affected\ntimestamp (datetime): the time when the check-in was logged\ncategory (string factor): a string describing the expense category, one of {“Education”, “Food”, “Recreation”, “RentAdjustment”, “Shelter”, “Wage”}\namount (double): the amount of the transaction For explanation of Rent Adjustment, please refer to this link"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#examining-the-datasets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#examining-the-datasets",
    "title": "Take-home_Ex01",
    "section": "2.3 Examining the datasets",
    "text": "2.3 Examining the datasets\n\nParticipant csv\nLets first examine the properties of the participants csv file.\n\nQuick peekDataset structureSummaryFurther examination of categorical variable\n\n\n\ndatatable(part_info)\n\n\n\n\n\n\n\n\n\nstr(part_info)\n\nspc_tbl_ [1,011 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId : num [1:1011] 0 1 2 3 4 5 6 7 8 9 ...\n $ householdSize : num [1:1011] 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: chr [1:1011] \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   householdSize = col_double(),\n  ..   haveKids = col_logical(),\n  ..   age = col_double(),\n  ..   educationLevel = col_character(),\n  ..   interestGroup = col_character(),\n  ..   joviality = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\n\nRemoved participant Id, education level and interestgroup from the following since summary are not meaningful\n\nsummary(part_info[, c(\"householdSize\", \"haveKids\", \"age\",\"joviality\")])\n\n householdSize    haveKids            age          joviality       \n Min.   :1.000   Mode :logical   Min.   :18.00   Min.   :0.000204  \n 1st Qu.:1.000   FALSE:710       1st Qu.:29.00   1st Qu.:0.240074  \n Median :2.000   TRUE :301       Median :39.00   Median :0.477539  \n Mean   :1.964                   Mean   :39.07   Mean   :0.493794  \n 3rd Qu.:3.000                   3rd Qu.:50.00   3rd Qu.:0.746819  \n Max.   :3.000                   Max.   :60.00   Max.   :0.999234  \n\n\n\n\nCount of resident for each interest group\n\ntable(part_info$interestGroup)\n\n\n  A   B   C   D   E   F   G   H   I   J \n102  91 102  96  83 106 108 111  96 116 \n\n\nCount of resident for each education level\n\ntable(part_info$educationLevel)\n\n\n          Bachelors            Graduate HighSchoolOrCollege                 Low \n                232                 170                 525                  84 \n\n\n\n\n\n\nCheck for missing valuesCheck for duplicates\n\n\n\nsum(is.na(part_info))\n\n[1] 0\n\n\n\n\n\nduplicates1 <- duplicated(part_info)\npart_info[duplicates1, ]\n\n# A tibble: 0 × 7\n# ℹ 7 variables: participantId <dbl>, householdSize <dbl>, haveKids <lgl>,\n#   age <dbl>, educationLevel <chr>, interestGroup <chr>, joviality <dbl>\n\n\nSince 0 rows are displayed. We can confirm that duplicates do not exist in this csv file.\n\n\n\n\n\nFinance csv\nLets move on to examine the properties of the finance csv file.\n\nQuick peakDataset structureSummaryFurther examination of categorical variable\n\n\nSneak peak of the first few entries in the dataset\n\nhead(finance)\n\n# A tibble: 6 × 4\n  participantId timestamp           category  amount\n          <dbl> <dttm>              <chr>      <dbl>\n1             0 2022-03-01 00:00:00 Wage      2473. \n2             0 2022-03-01 00:00:00 Shelter   -555. \n3             0 2022-03-01 00:00:00 Education  -38.0\n4             1 2022-03-01 00:00:00 Wage      2047. \n5             1 2022-03-01 00:00:00 Shelter   -555. \n6             1 2022-03-01 00:00:00 Education  -38.0\n\n\n\n\n\n\n\n\nWarning\n\n\n\nPlease do not use datatable here or you will face a error of ‘Fatal javascript OOM in reached Heap Limit’ which indicate that R studio session has run out of memory while attempting to execute JavaScript code.\n\n\n\n\n\nstr(finance)\n\nspc_tbl_ [1,513,636 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId: num [1:1513636] 0 0 0 1 1 1 2 2 2 3 ...\n $ timestamp    : POSIXct[1:1513636], format: \"2022-03-01\" \"2022-03-01\" ...\n $ category     : chr [1:1513636] \"Wage\" \"Shelter\" \"Education\" \"Wage\" ...\n $ amount       : num [1:1513636] 2473 -555 -38 2047 -555 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   timestamp = col_datetime(format = \"\"),\n  ..   category = col_character(),\n  ..   amount = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\n\nOnly ‘amount’ variable summary is displayed since summary of other variables are not useful\n\nsummary(finance[c(\"amount\")])\n\n     amount         \n Min.   :-1562.726  \n 1st Qu.:   -5.594  \n Median :   -4.000  \n Mean   :   20.047  \n 3rd Qu.:   21.598  \n Max.   : 4096.526  \n\n\n\n\n\ntable(finance$category)\n\n\n     Education           Food     Recreation RentAdjustment        Shelter \n          3319         790051         296013            131          11463 \n          Wage \n        412659 \n\n\n\n\n\n\nCheck for missing valuesCheck for outliersCheck for duplicates\n\n\n\nsum(is.na(finance))\n\n[1] 0\n\n\nThere is ni missing values\n\n\nCheck for outlier in the amount variable. We first group the amount variables by the category. Then we do a box plot. From the chart we can observe that shelter has some abnormally small values to the negative end and wages has some exceptionally large values on the positive end. We may wish to take note of these in our analysis.\n\n\nShow the code\n# Create a box plot of amount by category\nggplotly(ggplot(finance, aes(x = category, y = amount, fill = category)) +\n  geom_boxplot() +\n  xlab(\"Expense Category\") +\n  ylab(\"Amount\") +\n  ggtitle(\"Amount Spent by Expense Category\"))\n\n\n\n\n\n\n\n\nNow lets move to check for duplicates. The code below will display the duplicates in the financial_journal.csv\n\nduplicates <- duplicated(finance)\nfinance[duplicates, ]\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n           <dbl> <dttm>              <chr>       <dbl>\n 1             0 2022-03-01 00:00:00 Shelter    -555. \n 2             0 2022-03-01 00:00:00 Education   -38.0\n 3             1 2022-03-01 00:00:00 Shelter    -555. \n 4             1 2022-03-01 00:00:00 Education   -38.0\n 5             2 2022-03-01 00:00:00 Shelter    -557. \n 6             2 2022-03-01 00:00:00 Education   -12.8\n 7             3 2022-03-01 00:00:00 Shelter    -555. \n 8             3 2022-03-01 00:00:00 Education   -38.0\n 9             4 2022-03-01 00:00:00 Shelter   -1556. \n10             4 2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\nWe will remove these duplicates and resave the file as finance using the following code\n\nfinance <- distinct(finance)\n\nLets just confirm that the duplicates are removed using the following code. The output of the following should be the same.\n\nnrow(finance)\n\n[1] 1512523\n\nnrow(distinct(finance))\n\n[1] 1512523\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nFor better data presentation and consistency, we may encode all expenses into positive instead of negative using the code below. However, we will not do this as we will will analysis rent adjustments which has positive and negative and may cause confusion\n\n#finance$amount <- abs(finance$amount)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#checking-for-anomalies-in-datasets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#checking-for-anomalies-in-datasets",
    "title": "Take-home_Ex01",
    "section": "2.4 Checking for anomalies in datasets",
    "text": "2.4 Checking for anomalies in datasets\n\n\nShow the code\nfinance %>%\n  mutate(date = as.Date(timestamp)) %>%\n  group_by(participantId) %>%\n  summarise(num_months = n_distinct(format(date, \"%Y-%m\"))) %>%\n  datatable()\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nClicking from the above table, we do realize that most participant id has transaction in all 12 months but some only had transactions in one month. We should remove them as it is likely they are not residents\n\n\nUsing the code below, we built a table and identify residents with irregular transactions\n\n\nShow the code\nfinance %>%\n  mutate(date = as.Date(timestamp)) %>%\n  group_by(participantId) %>%\n  summarise(num_months = n_distinct(format(date, \"%Y-%m\"))) %>%\n  filter(num_months != max(num_months)) %>%\n  datatable()\n\n\n\n\n\n\n\nWe will move on to classify the above identified participants as non residents and remove them from the data sets\n\nRemoving non-residents from finance dataset\n\n# calculate num_months for each participant\nmonthly_counts <- finance %>%\n  mutate(date = as.Date(timestamp)) %>%\n  group_by(participantId) %>%\n  summarize(num_months = n_distinct(format(date, \"%Y-%m\")))\n\n# find participants with num_months different from the maximum num_months\nnon_residents <- monthly_counts %>%\n  filter(num_months != max(num_months))\n\n# remove non-residents from the finance data frame\nfinance <- finance %>%\n  filter(!participantId %in% non_residents$participantId)\n\nA reduction in rows is observed below indicating removal of 131 residents.\n\nnrow(distinct(finance))\n\n[1] 1509897\n\n\n\n\nRemoving non-residents from participant dataset\nWe will also update out participant csv to remove the non residents\n\n# remove non-residents from the finance data frame\npart_info <- part_info %>%\n  filter(!participantId %in% non_residents$participantId)\n\nWe can see a reduction in 131 rows as well\n\nnrow(distinct(part_info))\n\n[1] 880"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#exploring-participants-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#exploring-participants-data",
    "title": "Take-home_Ex01",
    "section": "3.1 Exploring participants data",
    "text": "3.1 Exploring participants data\n\n3.1.1 Education vs age\n\n\nShow the code\nv7<- ggplot(part_info, aes(x = age, fill = educationLevel)) +\n  geom_bar() +\n  labs(title = \"Distribution of Education Level by age\",\n       x = \"Age (years)\",\n       y = \"Education Level\")\nv8<- ggplot(part_info, aes(x = age)) +\n  geom_bar() +\n  labs(title = \"Age Distribution by Education Level\",\n       x = \"Age (years)\",\n       y = \"Count\") +\n  facet_wrap(~ educationLevel, ncol = 2)\n\nv7 + v8\n\n\n\n\n\nFrom the charts, we can observe that across different age, high school educated residents are of the majority while low educated residents are of the minority.\n\n\n\n\n\n\nNote\n\n\n\nAdded fig.height to make sure that the charts are not overly compressed\n\n\n\n\n3.1.2 Household size vs have kids\n\n\nShow the code\nggplot(part_info, aes(x = haveKids, y = householdSize)) +\n  geom_jitter() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  labs(title = \"Relationship between Household Size and Having Children\",\n       x = \"Have Children\",\n       y = \"Household Size\")\n\n\n\n\n\nFrom the chart, we observe a pattern that only household with 3 person have kids while those with 2 do not. This is useful because for the authorities, provison of subsidies such as milk and diaper vouchers can be directed specifically to family with more than 3 household members\n\n\n3.1.3 Have kids vs education\n\n\nShow the code\n# We use this line to relabel the education level according to acceding order\nedu_levels <- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\n\n# convert education level column to our above specified levels\npart_info$educationLevel <- factor(part_info$educationLevel, levels = edu_levels)\n\n# Calculate percentage of each education level group with children\nedu_kids <- part_info %>%\n  group_by(educationLevel, haveKids) %>%\n  summarise(count = n()) %>%\n  mutate(percentage = count / sum(count))\n\n# Plot the bar chart\nggplotly(ggplot(edu_kids, aes(x = educationLevel, y = percentage, fill = haveKids)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Percentage of Participants with Children by Education Level\",\n       x = \"Education Level\",\n       y = \"Percentage with Children\") +\n  scale_fill_manual(values = c(\"#E69F00\", \"#56B4E9\"), labels = c(\"No\", \"Yes\")))\n\n\n\n\n\n\nFrom the above we can observe that across all education levels, percentage of residents who have kids are generally lower that than percentage of residents who do not have kids. There seems to be an inverse relationship between education level and if a resident has kids (with exception to high school where it is higher than low education residents).\n\n\n\n\n\n\nNote\n\n\n\nWe specify the desired order of the education levels using the edu_levels vector. Then, we convert the education level column to a factor with the desired levels using the factor() function and the levels\n\n\n\n\n3.1.4 Mean age vs having kids\n\n\nShow the code\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean age:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=part_info, \n                   aes(x = haveKids),\n) +\n  stat_summary(aes(y = age, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = age),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\nFrom the chart above, we do not observe any significant difference.However we do note that mean age of residents who do not have kids are sightly lower than those who do have kids.\nLet’s perform a statistical test to determine if there is a difference in the mean\n\n\nShow the code\nggbetweenstats(\n  data = part_info,\n  x = haveKids,\n  y = age,\n  plot.type = \"box\",\n  pairwise.comparisons = TRUE,\n  mean.plotting = TRUE,\n   message = TRUE ,\n  xlab = \"Having Kids\",\n  ylab = \"Age\"\n)\n\n\n\n\n\nAt a significance level of 5%, since the p value is greater than 0.05, we cannot reject the null hypothesis that the mean age of resident who have and do not have kids are the same\n\n\n3.1.5 Percentage of Participants in Each Interest Group by Education Level\n\n\nShow the code\nedu_levels <- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\n\npart_info$educationLevel <- factor(part_info$educationLevel, levels = edu_levels)\n\ngrouped_data <- part_info %>%\n  group_by(educationLevel, interestGroup) %>%\n  summarise(count = n()) %>%\n  mutate(percentage = prop.table(count) * 100)\n\nplot <- ggplot(grouped_data, aes(x = educationLevel, y = percentage, fill = interestGroup)) +\n  geom_col(position = \"dodge\") +\n  labs(title = \"Percentage of Participants in Each Interest Group by Education Level\",\n       x = \"Education Level\",\n       y = \"Percentage\") +\n  scale_fill_brewer(palette = \"Set3\") +\n  theme()\n\nplotly_plot <- ggplotly(plot)\nplotly_plot\n\n\n\n\n\n\nFrom the above chart, we observe that interest group I has exceptionally high percentage of participants from low education level while interest group E has the exceptionally low percentage of participant from low education level residents. For other education levels, interest group participation, percentage of participation across interest groups varies shows less of huge difference. More information may be required to determine the reasons behind.\n\n\n3.1.6 Mean joviality vs education\n\n\nShow the code\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean jovility:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=part_info, \n                   aes(x = educationLevel),\n) +\n  stat_summary(aes(y = joviality, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = joviality),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\nWe can observe from the above chart that mean joviality increases with increasing education level.\nLet’s perform a statistical test to determine if there is a difference in the mean jovialaity\n\n\nShow the code\nggbetweenstats(\n  data = part_info,\n  x = educationLevel,\n  y = joviality,\n  plot.type = \"box\",\n  mean.plotting = TRUE,\n  xlab = \"Education Level\",\n  ylab = \"Joviality\"\n)\n\n\n\n\n\nAt a significance level of 5%, since the p value is smaller than 0.05, we reject the null hypothesis that the mean joviality of resident with different education are the same. Therefore, we confirm that mean joviality is different across education levels.\n\n\n3.1.7 Mean joviality vs household size\n\n\nShow the code\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean jovility:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=part_info, \n                   aes(x = householdSize),\n) +\n  stat_summary(aes(y = joviality, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = joviality),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\nWe observe that mean joviality for single person household is highest display an decreasing trend with increasing number of members of the household. Household size of 3 seems to have the least joviality. A possible reason may be that stress from raising the children may have made them less jovial, this may be a potential area that authorities can examine (with more information) if they hope to raise the mean joviality of the group.\nLet’s perform a statistical test to determine if there is a difference in the mean joviality\n\n\nShow the code\nggbetweenstats(\n  data = part_info,\n  x = householdSize,\n  y = joviality,\n  plot.type = \"box\",\n  mean.plotting = TRUE,\n  xlab = \"Household Size\",\n  ylab = \"Joviality\"\n)\n\n\n\n\n\nHowever, at a significance level of 5%, since the p value is greater than 0.05, we cannot reject the null hypothesis that the mean joviality of residents of different household size are the same.\n\n\n3.1.8 Mean joviality vs have kids\n\n\nShow the code\ntooltip <- function(y, ymax, accuracy = .01) {\n  mean <- scales::number(y, accuracy = accuracy)\n  sem <- scales::number(ymax - y, accuracy = accuracy)\n  havekids <- unique(part_info$haveKids)\n  paste(\"Have Kids:\", havekids, \"<br>\",\n        \"Mean Joviality:\", mean, \"+/-\", sem)\n}\n\ngg_point <- ggplot(data=part_info, \n                   aes(x = haveKids),\n) +\n  stat_summary(aes(y = joviality, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = joviality),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  labs(\n       x = \"Have Kids\",\n       y = \"Joviality\")\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\nFrom the chart above, we observe that mean joviality is lower for residents who have kids, this correspond to our previous analysis of mean joviality vs household size where household with 3 residents has the lowest mean joviality which may be caused by additional stress of taking care of kids\nLet’s perform a statistical test to determine if there is a difference in the mean joviality\n\n\nShow the code\nggbetweenstats(\n  data = part_info,\n  x = haveKids,\n  y = joviality,\n  plot.type = \"box\",\n  pairwise.comparisons = TRUE,\n  mean.plotting = TRUE,\n  xlab = \"Having Kids\",\n  ylab = \"Joviality\"\n)\n\n\n\n\n\nAt a significance level of 5%, since the p value is greater than 0.05, we cannot reject the null hypothesis that the mean joviality of resident who have and do not have kids are the same. There is insufficient evidence to suggest that there is a difference in mean joviality.\n\n\n3.1.9 Mean joviality vs age\n\n\nShow the code\nage_joviality <- part_info %>% \n  group_by(age) %>% \n  summarize(mean_joviality = mean(joviality))\n\nggplotly(ggplot(age_joviality, aes(x = age, y = mean_joviality)) +\n  geom_smooth(method = \"lm\", se = FALSE) + geom_point() +\n  labs(x = \"Age\", y = \"Mean Joviality\") +\n  ggtitle(\"Mean Joviality against Age\"))\n\n\n\n\n\n\nFrom the point plot alone, we do not see a distinct trend with age and mean joviality except that resident of age 53 has the lowest mean joviality and resident of age 59 has the highest mean joviality. When we overlay a smoothed line plot, we can see that mean joviality decreases with increasing age.\nLet’s perform a statistical test to determine if there is a difference in the mean joviality\n\n\nShow the code\nggscatterstats(\n  data = age_joviality,\n  x = age,\n  y = mean_joviality,\n  marginal = FALSE,\n  )+labs(x = \"Age\", y = \"Mean Joviality\")\n\n\n\n\n\nAt a significance level of 5%, since the p value is greater than 0.05, we cannot reject the null hypothesis that the mean joviality of resident is different across age group\n\nFurther examination\n\n\nShow the code\n# Add a column to indicate outliers using IQR method\nis_outlier <- function(x) {\n  qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)\n  H <- 1.5 * IQR(x, na.rm = TRUE)\n  x < (qnt[1] - H) | x > (qnt[2] + H)\n}\n\n# Create data subset for age 53\nage53_joviality <- subset(part_info, age == 53)\n\n# Create outlier column using is_outlier function\nage53_joviality$outlier <- is_outlier(age53_joviality$joviality)\n\n# Create ggplot box plot with outlier points colored red\nplot53 <- ggplot(data = age53_joviality, aes(x = 1, y = joviality)) +\n  geom_boxplot() +\n  geom_point(aes(x = jitter(1, factor = 0.3), y = joviality, color = outlier)) +\n  scale_color_manual(values = c(\"FALSE\" = \"black\", \"TRUE\" = \"red\")) +\n  theme_bw() +\n  ggtitle(\"Joviality at Age 53\") +\n  xlab(\"\") +\n  ylab(\"Joviality\")\n\n# Convert ggplot object to plotly\nplotly_object <- ggplotly(plot53)\n\n\n# Create data subset for age 59\nage59_joviality <- subset(part_info, age == 59)\n\n# Create outlier column using is_outlier function\nage59_joviality$outlier <- is_outlier(age59_joviality$joviality)\n\n# Create ggplot box plot with outlier points colored red\nplot59 <- ggplot(data = age59_joviality, aes(x = 1, y = joviality)) +\n  geom_boxplot() +\n  geom_point(aes(x = jitter(1, factor = 0.3), y = joviality, color = outlier)) +\n  scale_color_manual(values = c(\"FALSE\" = \"black\", \"TRUE\" = \"red\")) +\n  theme_bw() +\n  ggtitle(\"Joviality at Age 59\") +\n  xlab(\"\") +\n  ylab(\"Joviality\")\n# subplot for both plots\nsubplot(plot53, plot59, nrows = 1, titleY = TRUE, titleX = TRUE, margin = 0.1 ) %>%\n  layout(title = 'Further checking',\n         plot_bgcolor='#e5ecf6', \n         xaxis = list( \n           zerolinecolor = '#ffff', \n           zerolinewidth = 2, \n           gridcolor = 'ffff'), \n         yaxis = list( \n           zerolinecolor = '#ffff', \n           zerolinewidth = 2, \n           gridcolor = 'ffff')) %>%\n  layout(annotations = list(\n    list(\n      x = 0.25,  \n      y = 1.0,  \n      text = \"Distribution of Age 53 Participants' Joviality\",  \n      xref = \"paper\",  \n      yref = \"paper\",  \n      xanchor = \"center\",  \n      yanchor = \"bottom\",  \n      showarrow = FALSE \n    ),\n    list(\n      x = 0.75,  \n      y = 1.0,  \n      text = \"Distribution of Age 59 Participants' Joviality\",  \n      xref = \"paper\",  \n      yref = \"paper\",  \n      xanchor = \"center\",  \n      yanchor = \"bottom\",  \n      showarrow = FALSE \n    )\n  ))\n\n\n\n\n\n\nWe can observe that joviality for age 53 residents are more concentrated to below 0.5 while joviality for age 59 residents are more evenly distributed across the axis. This confirms our expectation that age 53 residents may indeed be generally not jovial while for age 59 residents, there is no such general concentration of joviality observed.\n\n\n\n3.2.0 Mean Joviality vs Interest group\n\n\nShow the code\n# Aggregate joviality by interest group\njoviality_interest <- aggregate(joviality ~ interestGroup, data = part_info, mean)\n\n# Plot mean joviality by interest group\nggplot(data = joviality_interest, aes(x = interestGroup, y = joviality)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = round(joviality, 2)), vjust = -0.5) +\n  labs(x = \"Interest Group\", y = \"Mean Joviality\", \n       title = \"Mean Joviality by Interest Group\")\n\n\n\n\n\nInterest group E provides the highest mean joviality. If officials are looking to improve joviality among residents, they may consider encouraging participation in interest group E through ways such as subsidizing group E membership, etc\nLet’s perform a statistical test to determine if there is a difference in the mean joviality\n\n\nShow the code\nggbetweenstats(\n  data = part_info,\n  x = interestGroup,\n  y = joviality,\n  plot.type = \"box\",\n  mean.plotting = TRUE,\n  xlab = \"Interest Group\",\n  ylab = \"Joviality\")+\n  scale_color_brewer(palette = \"Set3\")\n\n\n\n\n\nAt a significance level of 5%, since the p value is greater than 0.05, we cannot reject the null hypothesis that the mean joviality of resident who participate in different interest groups are the same.\n\n\n\n\n\n\nNote\n\n\n\nWe use scale_color_brewer() as default palette only has 8 colors. We can define out own colors as well to be used in palette"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#exploring-financial-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#exploring-financial-data",
    "title": "Take-home_Ex01",
    "section": "3.2 Exploring financial data",
    "text": "3.2 Exploring financial data\nNext we move on to explore variables in the financial data. Since every participant can have multiple entries. We will explore the data by grouping the entries according the participant’s Id and the category\n\n3.21 Sum of residents expenditure by category\n\n\nShow the code\n# Aggregate financial data by participant\nfinancial_data_agg <- finance %>%\n  group_by(participantId,category) %>%\n  summarize(total = sum(amount), .groups = \"drop\")\n\n# Financial summary\nexpenses_summary <- financial_data_agg %>%\n  group_by(category) %>%\n  summarize(total = sum(total))\n\n# Bar chart of expenses by category\nexpenses_plot <- ggplot(expenses_summary, aes(x = category, y = total)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"Expense Category\", y = \"Total Amount Spent\", title = \"Expenses by Category\") +\n  theme_minimal()\nggplotly(expenses_plot)\n\n\n\n\n\n\nIn the chart above we realize wage is counted as part of expenditure We will remove wage since it is not exactly an expense that we will be looking at.\n\nExpenses by category (removing wage)\n\n\nShow the code\n# Aggregate financial data by participant\nfinancial_data_agg <- finance %>%\n   filter(category != \"Wage\") %>%\n  group_by(participantId, category) %>%\n  summarize(total = sum(amount), .groups = \"drop\")\n\n# Financial summary\nexpenses_summary <- financial_data_agg %>%\n  group_by(category) %>%\n  summarize(total = sum(total))\n\n# Bar chart of expenses by category\nexpenses_plot1 <- ggplot(expenses_summary, aes(x = category, y = total)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"Expense Category\", y = \"Total Amount Spent\", title = \"Expenses by Category\") +\n  theme_minimal()\nggplotly(expenses_plot1)\n\n\n\n\n\n\nFrom the chart above we realize that shelter accounts for the main category for expenditure. This is followed by recreation, food and education. Rent adjustment is on the negative end which may be a indication that the landlord in the city has overall lowered their rents.\n\n\n\n3.2.2 Total wage against month\nNext we will examine the wages over the months across the time stamp period.\n\n\nShow the code\n# Convert the timestamp column to a datetime object\nfinance$timestamp <- as.POSIXct(finance$timestamp)\n\n# Create a line chart of wages per month\nwages_per_month <- finance %>%\n  filter(category == \"Wage\") %>%\n  group_by(month = floor_date(timestamp, \"month\")) %>%\n  summarize(total_wages = sum(amount)) %>%\n  ggplot(aes(x = month, y = total_wages)) +\n  geom_line() +\n  labs(x = \"Month\", y = \"Total Wages\", title = \"Total Wages against Month\") +\n  scale_x_datetime(date_labels = \"%b %Y\")\n\n# Display the plot\nprint(wages_per_month)\n\n\n\n\n\nFrom the above chart, we realize that in March, total wage is abnormally high. This may be an anomaly that that may require further information to examine. For now, we will retain it as it is.\n\n\n3.2.3 Average Amount by Category over Time\n\n\nShow the code\n# Aggregate financial data by category and timestamp\nfinancial_data_agg <- finance %>%\n  filter(category != \"Wage\") %>%\n  group_by(category, timestamp) %>%\n  summarize(avg_amount = mean(amount))\n\n# Line chart of average amount by timestamp, colored by category\nline_chart <- ggplot(financial_data_agg, aes(x = timestamp, y = avg_amount, color = category)) +\n  geom_line() +\n  labs(x = \"Timestamp\", y = \"Average Amount\", title = \"Average Amount by Category over Time\") +\n  theme_minimal()\n\n# Display the chart\nggplotly(line_chart)\n\n\n\n\n\n\nFrom the above chart, we observe that mapping average amount for category by days in the time stamp is not visually pleasing to see any patterns. But still if we zoom in, we can get some information from it.We can see that there are some major fluctuation in shelter amount and rent adjustment in march and April. Education amount is incurred on first day of the month and that if we zoom in. We can see that recreation and food demonstrates a regular pattern as shown in the pic below\n\nLets try to map above information in terms of months\n\n\n3.2.4 Average Amount Spent by Category per Month\n\n\nShow the code\n# Extract month from timestamp\nfinancial_data_agg <- finance %>%\n  filter(category != \"Wage\") %>%\n  mutate(month = format(timestamp, \"%Y-%m\")) %>%\n  group_by(participantId, category, month) %>%\n  summarize(total = sum(amount), .groups = \"drop\")\n\n# Calculate average amount spent by category per month\ncategory_month_avg <- financial_data_agg %>%\n  group_by(category, month) %>%\n  summarize(avg_amount = mean(total))\n\n# Create bar chart\ncategory_month_plot <- ggplot(category_month_avg, aes(x = month, y = avg_amount, fill = category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(x = \"Month\", y = \"Average Amount Spent\", title = \"Average Amount Spent by Category per Month\") +\n  theme(axis.text.x = element_text(angle = 45,\n                                   vjust = 0.5,\n                                   hjust = 0.5))\n# Plot interactive chart\nggplotly(category_month_plot)\n\n\n\n\n\n\nFrom the chart above we observe that the amount spent on average per category is indeed in the following order with education < food < recreation < shelter. We can also observe some anomalies in March and April. There is an exceeding large expenditure on shelter and recreation in march and in April the rent adjustment increased exceptionally as well. The expenditure in shelter may have being transferred to increase rent adjustment.\n\n\n\n\n\n\nNote\n\n\n\nUsing theme minimal will result in overlapping of x-axis. I use theme here so that angle of x-axis label can be adjusted 45 degrees\n\n\n\n\n\n\n\n\nNote\n\n\n\nSince not everyone in the city is a landlord / tenant. This chart only serve as a benchmark of average amount city resident spent."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#merged-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#merged-visualization",
    "title": "Take-home_Ex01",
    "section": "3.3 Merged visualization",
    "text": "3.3 Merged visualization\nNow lets see some visualizations after we merge these 2 files together using the code below\n\n\nShow the code\nfinancial_journal <- finance %>%\n  mutate(date = as.Date(timestamp))\n\n# Aggregate financial data by participantId and category\nagg_financial <- financial_journal %>%\n  group_by(participantId, category) %>%\n  summarize(total_spent = sum(amount), .groups = \"drop\")\n\n# Merge demographic data with aggregated financial data\nmerged_data <- part_info %>%\n  left_join(agg_financial, by = \"participantId\")\n\n\nWe can see the residents’ total expenditures in each category and their respective wage using the below code.\n\n\nShow the code\nDT::datatable(merged_data[, c(\"participantId\", \"category\", \"total_spent\")], class = 'compact')\n\n\n\n\n\n\n\nLets move on to see some EDAs\n\n3.3.1 Wage agaist joviality\n\n\nShow the code\n# Subset merged_data to only include rows where category is \"wage\"\nwage_data <- merged_data %>% filter(category == \"Wage\")\n\nggplotly(ggplot(wage_data, aes(x = total_spent, y = joviality)) +\n  geom_smooth() +\n  labs(title = \"Wage vs. Joviality\", x = \"Wage\", y = \"Joviality\")+ geom_point())\n\n\n\n\n\n\nUsing the smooth trend line, we can observe that joviality generally decrease with increasing wage. This may be because a higher wage may mean more responsibility at work and hence greater amount of stress which lead to lower joviality\nLet’s perform a statistical test to determine if there is a correlation between joviality and wage\n\n\nShow the code\nggscatterstats(\n  data = wage_data,\n  x = total_spent,\n  y = joviality,\n  marginal = FALSE,\n  ) + labs(x = \"Wage\", y = \"Joviality\")\n\n\n\n\n\nAt 5% significance level, since the p value is smaller than 0.05, we reject the null hypothesis that there is no correlation between joviality and wage\n\n\n3.3.2 Wage against education level\n\n\nShow the code\nwage_data <- merged_data %>% filter(category == \"Wage\")\n\nggplot(wage_data, aes(x = educationLevel, y = total_spent)) +\n  geom_point() +\n  geom_boxplot(alpha = 0.5, width = 0.2, outlier.size = 1) +\n  labs(x = \"Education Level\", y = \"Wage\")\n\n\n\n\n\nFrom the chart above we can observe increasing education level of residents has increasing level of wage\n\n\n3.3.3 Wage against interest group\n\n\nShow the code\nwage_data <- merged_data %>% filter(category == \"Wage\")\n\nggplot(wage_data, aes(x = interestGroup, y = total_spent)) +\n  geom_point(alpha = 0.5, width = 0.2) +\n  geom_boxplot(alpha = 0.5, width = 0.2, outlier.size = 1) +\n  labs(x = \"Interest Group\", y = \"Wage\")\n\n\n\n\n\nFrom the above chart, wage distribution across interest group seems to be well spread. But Interest group I seems to have attracted on one of the largest wage resident in the city.\nLet’s perform a statistical test to determine if there is a correlation between joviality and wage\n\nmodel <- lm(total_spent ~ interestGroup + educationLevel, data = wage_data)\nmodel\n\n\nCall:\nlm(formula = total_spent ~ interestGroup + educationLevel, data = wage_data)\n\nCoefficients:\n                      (Intercept)                     interestGroupB  \n                         35276.37                           -2849.09  \n                   interestGroupC                     interestGroupD  \n                         -2936.16                             583.35  \n                   interestGroupE                     interestGroupF  \n                         -3019.36                           -5420.24  \n                   interestGroupG                     interestGroupH  \n                         -4753.63                            -993.26  \n                   interestGroupI                     interestGroupJ  \n                            58.03                           -2917.00  \neducationLevelHighSchoolOrCollege            educationLevelBachelors  \n                          5816.44                           28023.60  \n           educationLevelGraduate  \n                         42627.88  \n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n           Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n  interestGroup 1.04 [1.01, 1.22]         1.02      0.96     [0.82, 0.99]\n educationLevel 1.04 [1.01, 1.22]         1.02      0.96     [0.82, 0.99]\n\n\n\n\nShow the code\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nFrom the results, we can determine that there is a low correlation between education level and interest group attended against wage\n\n\n3.3.4 Percentage of spending within each category for each group\n\n\nShow the code\nspending_by_kids <- merged_data %>%\n  filter(category != \"Wage\") %>%\n  group_by(haveKids, category) %>%\n  summarise(total_spending = sum(total_spent)) %>%\n  mutate(percentage = total_spending/sum(total_spending)*100)\n\n# Convert haveKids to a factor for easier plotting\nspending_by_kids$haveKids <- as.factor(spending_by_kids$haveKids)\n\nspending_by_kids_plot <- ggplot(spending_by_kids, aes(x = haveKids, y = percentage, fill = category)) +\n  geom_bar(position = \"stack\", stat = \"identity\") +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  labs(title = \"Percentage of Spending by Category and Household Type\",\n       x = \"Household Type\",\n       y = \"Percentage of Spending\") +\n  guides(fill = guide_legend(title = \"Spending Category\"))\n\nggplotly(spending_by_kids_plot)\n\n\n\n\n\n\nWe can observe that those who do not spend on education at all have no kids while household which do have kids has greater spending on shelter and food and lower on recreation.\n\n\n3.3.5 Spending category by education level\n\n\nShow the code\nspending_data <- merged_data %>% filter(category != \"Wage\")\n\nggplot(spending_data, aes(x = category, y = total_spent, fill = category)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~educationLevel, ncol = 2) +\n  scale_fill_discrete(name = \"Spending Category\") +\n  labs(x = \"Spending Category\", y = \"Amount\")\n\n\n\n\n\nFrom the chart we can observe that, with the exception of rent adjustment, spending pattern by category across different education level is generally the same. High school educated and bachelors educated has the highest positive rent adjustment which may indicate that there are more landlords from these 2 education backgrounds\n\n\n3.3.6 Recreation spending vs joviality\n\n\nShow the code\nrecreation_data <- merged_data %>%\n  filter(category == \"Recreation\")\n\n# Create scatter plot of joviality vs recreation spending\nggplot(recreation_data, aes(x = total_spent, y = joviality)) +\n  geom_smooth() +\n  labs(x = \"Recreation Spending\", y = \"Joviality\") + geom_point()\n\n\n\n\n\nFrom the above observation, it seems that increasing spending would increase joviality until a saturation is reached at around $10000. Note that the chart is plotted on a negative x-axis as spending is accounted for as negative value.\nLet’s perform a statistical test to determine if there is a correlation bewteen joviality and recreation spending\n\n\nShow the code\nggscatterstats(\n  data = recreation_data,\n  x = total_spent,\n  y = joviality,\n  marginal = FALSE,\n  ) + labs(x = \"Recreation\", y = \"Joviality\")\n\n\n\n\n\nAt 5% significance level, since the p value is smaller than 0.05, we reject the null hypothesis that there is no correlation between joviality and recreation expenses"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "title": "Take-home_Ex01",
    "section": "4 Conclusion",
    "text": "4 Conclusion\nIn conclusion, I believe that the authority there are a few points in which the they can look at when allocating the grant.\n\nGreater funds should be channeled to support the education of residents given that it is the lowest expenditure. Currently education is only observed in residents who has kids and I assume that this expenditure is on the kids only. Perhaps the authorities can look at sponsoring adults continuous learning as well.\nMean joviality increases with increase increasing education and that this may be a reason to further support fundings for education purposes.\nJoviality has an inverse relationship with wage and the manpower authority should perhaps examine the current laws and manpower landscape to determine if employees are properly treated in workplace\nThe mean age of residents having kids is 38 and the percentage of residents who have kids decreases as their education level increase. Targeted family development measures should be put in place if authorities seeks to reduce this age and encourage fertility rate among certain education group level\nShelter accounts for the largest expenditure in the category and residents who have kids spends on a larger percentage for shelter. Since shelter is a fundamental necessity, the authorities can perhaps consider rental subsidies and support for qualified residents.\nIncreasing recreation expenses improves joviality to a certain extent. If the city want to improve the happiness of the residents, perhaps they can consider measures such as free tours to parks,etc\n\nTo sum up, I have examined some variables and their correlation to each another. I have also provided some areas in which the authority can look at to disburse their city renewal grant and revitalize the community. However, as correlation does not equal causation, the above only serves as a reference to which the authority can look at. Further examination with more in dept data are required to understand the community and solve the problems more efficiently ."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nIn this website you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]